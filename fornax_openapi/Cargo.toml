[package]
name = "fornax-openapi"
version = "0.1.0"
license = "Apache-2.0"
authors = ["Quark authors"]
categories = ["api-bindings", "web-programming::http-client"]
description = "Bindings for the CentaurusInfra fornax serverless client API"
documentation = "https://arnavion.github.io/k8s-openapi/v0.17.x/k8s_openapi/"
edition = "2021"
keywords = ["client", "fornax-serverless", "centaurus", "http"]
readme = "README.md"
repository = ""
include = [
	"build.rs",
	"Cargo.toml",
	"LICENSE",
	"README.md",
	"src/**/*",
]

links = "fornax-openapi-client-0.1.0"

[dependencies]
base64 = { version = "0.21", default-features = false, features = [
	"alloc", # for base64::Engine::decode and base64::Engine::encode
] }
bytes = { version = "1", default-features = false}
dirs = { version = "4", default-features = false }
chrono = { version = "0.4.1", default-features = false, features = [
	"alloc", # for chrono::DateTime::<Utc>::to_rfc3339_opts
	"serde", # for chrono::DateTime<Utc>: serde::Deserialize, serde::Serialize
] }
futures-core = { version = "0.3", default-features = false }
futures-io = { version = "0.3", default-features = false }
futures-util = { version = "0.3", default-features = false, features = [
	"io", # for futures_util::StreamExt::into_async_read
] }
http = { version = "0.2", optional = true, default-features = false }
k8s-openapi-derive = { path = "./k8s-openapi-derive" }
openssl = { version = "0.10", default-features = false }
percent-encoding = { version = "2", optional = true, default-features = false }
pin-project = { version = "1", default-features = false }
reqwest = { version = "0.11", default-features = false, features = [
	"native-tls", # for TLS support
	"stream", # for reqwest::Response::bytes_stream
] }
schemars = { version = "0.8", default-features = false, features = [
	"derive", # for #[derive(schemars::JsonSchema)]
] }
serde = { version = "1", default-features = false, features = [
	"derive",
] }
serde_json = { version = "1", default-features = false, features = [
	"alloc", # "serde_json requires that either `std` (default) or `alloc` feature is enabled"
] }
serde-value = { version = "0.7", default-features = false }
serde_yaml = { version = "0.9", default-features = false }
tokio = { version = "1", default-features = false, features = [
	"macros", # for #[tokio::test]
	"test-util", # for tokio::time::pause
	"time", # for tokio::time::sleep
] }
url = { version = "2", optional = true, default-features = false }

[features]
default = ["api"]

api = ["http", "percent-encoding", "url"] # Enables API operation functions and response types. If disabled, only the resource types will be exported.

# Each feature corresponds to a supported version of Kubernetes
v1_0 = []

[package.metadata.docs.rs]
# docs.rs generates docs for the latest version. To see the docs for an older version, please generate them yourself.
features = ["v1_0"]

[workspace]
members = [
    "k8s-openapi-codegen",
    "k8s-openapi-codegen-common",
    "k8s-openapi-derive",
    "fornax-openapi-tests",
]
