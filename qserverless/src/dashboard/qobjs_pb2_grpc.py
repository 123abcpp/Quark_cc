# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import qobjs_pb2 as qobjs__pb2


class QMetaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Version = channel.unary_unary(
                '/qmeta.QMetaService/Version',
                request_serializer=qobjs__pb2.VersionRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.VersionResponseMessage.FromString,
                )
        self.Create = channel.unary_unary(
                '/qmeta.QMetaService/Create',
                request_serializer=qobjs__pb2.CreateRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.CreateResponseMessage.FromString,
                )
        self.Get = channel.unary_unary(
                '/qmeta.QMetaService/Get',
                request_serializer=qobjs__pb2.GetRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.GetResponseMessage.FromString,
                )
        self.Delete = channel.unary_unary(
                '/qmeta.QMetaService/Delete',
                request_serializer=qobjs__pb2.DeleteRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.DeleteResponseMessage.FromString,
                )
        self.Update = channel.unary_unary(
                '/qmeta.QMetaService/Update',
                request_serializer=qobjs__pb2.UpdateRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.UpdateResponseMessage.FromString,
                )
        self.List = channel.unary_unary(
                '/qmeta.QMetaService/List',
                request_serializer=qobjs__pb2.ListRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.ListResponseMessage.FromString,
                )
        self.Watch = channel.unary_stream(
                '/qmeta.QMetaService/Watch',
                request_serializer=qobjs__pb2.WatchRequestMessage.SerializeToString,
                response_deserializer=qobjs__pb2.WEvent.FromString,
                )
        self.PutObj = channel.unary_unary(
                '/qmeta.QMetaService/PutObj',
                request_serializer=qobjs__pb2.PutObjReq.SerializeToString,
                response_deserializer=qobjs__pb2.PutObjResp.FromString,
                )
        self.DeleteObj = channel.unary_unary(
                '/qmeta.QMetaService/DeleteObj',
                request_serializer=qobjs__pb2.DeleteObjReq.SerializeToString,
                response_deserializer=qobjs__pb2.DeleteObjResp.FromString,
                )
        self.ReadObj = channel.unary_unary(
                '/qmeta.QMetaService/ReadObj',
                request_serializer=qobjs__pb2.ReadObjReq.SerializeToString,
                response_deserializer=qobjs__pb2.ReadObjResp.FromString,
                )
        self.ListObj = channel.unary_unary(
                '/qmeta.QMetaService/ListObj',
                request_serializer=qobjs__pb2.ListObjReq.SerializeToString,
                response_deserializer=qobjs__pb2.ListObjResp.FromString,
                )
        self.ReadFuncLog = channel.unary_unary(
                '/qmeta.QMetaService/ReadFuncLog',
                request_serializer=qobjs__pb2.ReadFuncLogReq.SerializeToString,
                response_deserializer=qobjs__pb2.ReadFuncLogResp.FromString,
                )


class QMetaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Watch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFuncLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QMetaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=qobjs__pb2.VersionRequestMessage.FromString,
                    response_serializer=qobjs__pb2.VersionResponseMessage.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=qobjs__pb2.CreateRequestMessage.FromString,
                    response_serializer=qobjs__pb2.CreateResponseMessage.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=qobjs__pb2.GetRequestMessage.FromString,
                    response_serializer=qobjs__pb2.GetResponseMessage.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=qobjs__pb2.DeleteRequestMessage.FromString,
                    response_serializer=qobjs__pb2.DeleteResponseMessage.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=qobjs__pb2.UpdateRequestMessage.FromString,
                    response_serializer=qobjs__pb2.UpdateResponseMessage.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=qobjs__pb2.ListRequestMessage.FromString,
                    response_serializer=qobjs__pb2.ListResponseMessage.SerializeToString,
            ),
            'Watch': grpc.unary_stream_rpc_method_handler(
                    servicer.Watch,
                    request_deserializer=qobjs__pb2.WatchRequestMessage.FromString,
                    response_serializer=qobjs__pb2.WEvent.SerializeToString,
            ),
            'PutObj': grpc.unary_unary_rpc_method_handler(
                    servicer.PutObj,
                    request_deserializer=qobjs__pb2.PutObjReq.FromString,
                    response_serializer=qobjs__pb2.PutObjResp.SerializeToString,
            ),
            'DeleteObj': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteObj,
                    request_deserializer=qobjs__pb2.DeleteObjReq.FromString,
                    response_serializer=qobjs__pb2.DeleteObjResp.SerializeToString,
            ),
            'ReadObj': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadObj,
                    request_deserializer=qobjs__pb2.ReadObjReq.FromString,
                    response_serializer=qobjs__pb2.ReadObjResp.SerializeToString,
            ),
            'ListObj': grpc.unary_unary_rpc_method_handler(
                    servicer.ListObj,
                    request_deserializer=qobjs__pb2.ListObjReq.FromString,
                    response_serializer=qobjs__pb2.ListObjResp.SerializeToString,
            ),
            'ReadFuncLog': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFuncLog,
                    request_deserializer=qobjs__pb2.ReadFuncLogReq.FromString,
                    response_serializer=qobjs__pb2.ReadFuncLogResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qmeta.QMetaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QMetaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/Version',
            qobjs__pb2.VersionRequestMessage.SerializeToString,
            qobjs__pb2.VersionResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/Create',
            qobjs__pb2.CreateRequestMessage.SerializeToString,
            qobjs__pb2.CreateResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/Get',
            qobjs__pb2.GetRequestMessage.SerializeToString,
            qobjs__pb2.GetResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/Delete',
            qobjs__pb2.DeleteRequestMessage.SerializeToString,
            qobjs__pb2.DeleteResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/Update',
            qobjs__pb2.UpdateRequestMessage.SerializeToString,
            qobjs__pb2.UpdateResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/List',
            qobjs__pb2.ListRequestMessage.SerializeToString,
            qobjs__pb2.ListResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Watch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/qmeta.QMetaService/Watch',
            qobjs__pb2.WatchRequestMessage.SerializeToString,
            qobjs__pb2.WEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/PutObj',
            qobjs__pb2.PutObjReq.SerializeToString,
            qobjs__pb2.PutObjResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/DeleteObj',
            qobjs__pb2.DeleteObjReq.SerializeToString,
            qobjs__pb2.DeleteObjResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/ReadObj',
            qobjs__pb2.ReadObjReq.SerializeToString,
            qobjs__pb2.ReadObjResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/ListObj',
            qobjs__pb2.ListObjReq.SerializeToString,
            qobjs__pb2.ListObjResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadFuncLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qmeta.QMetaService/ReadFuncLog',
            qobjs__pb2.ReadFuncLogReq.SerializeToString,
            qobjs__pb2.ReadFuncLogResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
